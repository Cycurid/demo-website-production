{"ast":null,"code":"const checkParams = require(\"./src/checkParams\");\n\nconst formatData = require(\"./src/formatData\");\n\nconst {\n  OAUTH_SERVER,\n  IMMEWIDGET_URL\n} = require(\"./src/constants\");\n\nconst axios = require(\"axios\");\n\nasync function immeVerification(data) {\n  try {\n    checkParams(data);\n    var formattedData = formatData(data.verifiable_data);\n    console.log(\"formattedData\", formattedData);\n    var session_url = `${OAUTH_SERVER}/v1/public/kyc/session/start`;\n    var uname = data.client_api_key;\n    var pass = data.client_api_secret;\n    axios.post(session_url, formattedData, {\n      auth: {\n        username: uname,\n        password: pass\n      }\n    }).then(function (response) {\n      ////Change this to production url\n      // const url= response.data.url;\n      console.log(\"responseStart\", response);\n      const session = response.data.url.split(\"/\").pop();\n      const testUrl = `${IMMEWIDGET_URL}/${session}`;\n      window.open(testUrl);\n    }).catch(function (error) {\n      console.log(\"Error\", error);\n    });\n  } catch (error) {\n    console.log(\"Error\", error);\n  }\n}\n\nmodule.exports = {\n  immeVerification\n};","map":{"version":3,"sources":["/Users/alain/Documents/Cycurid/cycurid-verification-js/index.js"],"names":["checkParams","require","formatData","OAUTH_SERVER","IMMEWIDGET_URL","axios","immeVerification","data","formattedData","verifiable_data","console","log","session_url","uname","client_api_key","pass","client_api_secret","post","auth","username","password","then","response","session","url","split","pop","testUrl","window","open","catch","error","module","exports"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,mBAAD,CAA3B;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,kBAAD,CAA1B;;AACA,MAAM;AAAEE,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,IAAmCH,OAAO,CAAC,iBAAD,CAAhD;;AACA,MAAMI,KAAK,GAAGJ,OAAO,CAAC,OAAD,CAArB;;AAEA,eAAeK,gBAAf,CAAgCC,IAAhC,EAAsC;AACpC,MAAI;AACFP,IAAAA,WAAW,CAACO,IAAD,CAAX;AACA,QAAIC,aAAa,GAAGN,UAAU,CAACK,IAAI,CAACE,eAAN,CAA9B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,aAA7B;AACA,QAAII,WAAW,GAAI,GAAET,YAAa,8BAAlC;AACA,QAAIU,KAAK,GAAGN,IAAI,CAACO,cAAjB;AACA,QAAIC,IAAI,GAAGR,IAAI,CAACS,iBAAhB;AACAX,IAAAA,KAAK,CACFY,IADH,CACQL,WADR,EACqBJ,aADrB,EACoC;AAChCU,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAEN,KADN;AAEJO,QAAAA,QAAQ,EAAEL;AAFN;AAD0B,KADpC,EAOGM,IAPH,CAOQ,UAAUC,QAAV,EAAoB;AACxB;AACA;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BW,QAA7B;AACA,YAAMC,OAAO,GAAGD,QAAQ,CAACf,IAAT,CAAciB,GAAd,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,GAA7B,EAAhB;AACA,YAAMC,OAAO,GAAI,GAAEvB,cAAe,IAAGmB,OAAQ,EAA7C;AACAK,MAAAA,MAAM,CAACC,IAAP,CAAYF,OAAZ;AACD,KAdH,EAeGG,KAfH,CAeS,UAAUC,KAAV,EAAiB;AACtBrB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBoB,KAArB;AACD,KAjBH;AAkBD,GAzBD,CAyBE,OAAOA,KAAP,EAAc;AACdrB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBoB,KAArB;AACD;AACF;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACf3B,EAAAA;AADe,CAAjB","sourcesContent":["const checkParams = require(\"./src/checkParams\");\nconst formatData = require(\"./src/formatData\");\nconst { OAUTH_SERVER, IMMEWIDGET_URL } = require(\"./src/constants\");\nconst axios = require(\"axios\");\n\nasync function immeVerification(data) {\n  try {\n    checkParams(data);\n    var formattedData = formatData(data.verifiable_data);\n    console.log(\"formattedData\", formattedData);\n    var session_url = `${OAUTH_SERVER}/v1/public/kyc/session/start`;\n    var uname = data.client_api_key;\n    var pass = data.client_api_secret;\n    axios\n      .post(session_url, formattedData, {\n        auth: {\n          username: uname,\n          password: pass,\n        },\n      })\n      .then(function (response) {\n        ////Change this to production url\n        // const url= response.data.url;\n        console.log(\"responseStart\", response);\n        const session = response.data.url.split(\"/\").pop();\n        const testUrl = `${IMMEWIDGET_URL}/${session}`;\n        window.open(testUrl);\n      })\n      .catch(function (error) {\n        console.log(\"Error\", error);\n      });\n  } catch (error) {\n    console.log(\"Error\", error);\n  }\n}\n\nmodule.exports = {\n  immeVerification,\n};\n"]},"metadata":{},"sourceType":"script"}