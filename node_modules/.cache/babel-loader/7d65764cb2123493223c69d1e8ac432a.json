{"ast":null,"code":"const axios = require('axios');\n\nmodule.exports = async function axiosRequest(method, url) {\n  let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return await axios({\n    method,\n    url,\n    data: body,\n    headers\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    // Error handling here\n    // Responded with non-2xx error code\n    if (error.response) {} else if (error.request) {// The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n    } else {} // Pass out the error for error handling\n\n\n    throw error;\n  });\n};","map":{"version":3,"sources":["/Users/alain/Documents/Cycurid/Demo-Website/node_modules/cycurid-widget-js/src/axiosRequest.js"],"names":["axios","require","module","exports","axiosRequest","method","url","body","headers","data","then","response","catch","error","request"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,eAAeC,YAAf,CAA4BC,MAA5B,EAAoCC,GAApC,EAAoE;AAAA,MAA3BC,IAA2B,uEAApB,IAAoB;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AACjF,SAAO,MAAMR,KAAK,CAAC;AACjBK,IAAAA,MADiB;AAEjBC,IAAAA,GAFiB;AAGjBG,IAAAA,IAAI,EAAEF,IAHW;AAIjBC,IAAAA;AAJiB,GAAD,CAAL,CAMVE,IANU,CAMJC,QAAD,IAAc;AAClB,WAAOA,QAAQ,CAACF,IAAhB;AACD,GARU,EASVG,KATU,CASHC,KAAD,IAAW;AAChB;AAEA;AACA,QAAIA,KAAK,CAACF,QAAV,EAAoB,CACnB,CADD,MACO,IAAIE,KAAK,CAACC,OAAV,EAAmB,CACxB;AACA;AACA;AACD,KAJM,MAIA,CACN,CAVe,CAYhB;;;AACA,UAAMD,KAAN;AACD,GAvBU,CAAb;AAwBD,CAzBH","sourcesContent":["const axios = require('axios')\n\nmodule.exports = async function axiosRequest(method, url, body = null, headers = {}) {\n    return await axios({\n      method,\n      url,\n      data: body,\n      headers,\n    })\n      .then((response) => {\n        return response.data\n      })\n      .catch((error) => {\n        // Error handling here\n  \n        // Responded with non-2xx error code\n        if (error.response) {\n        } else if (error.request) {\n          // The request was made but no response was received\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n          // http.ClientRequest in node.js\n        } else {\n        }\n  \n        // Pass out the error for error handling\n        throw error\n      })\n  }"]},"metadata":{},"sourceType":"script"}